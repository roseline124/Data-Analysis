margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
ggplotly(p)
---
title: "For_midterm.r"
author: "roseline"
date: "2019년 4월 17일"
output: word_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
getwd()
read.csv2(guest_house)
read.csv2("dataset/guest_house")
read.csv2("dataset/guest_house.csv")
read.csv2("dataset/guest_house.csv", header=T)
read.csv2("dataset/guest_house.csv", header = T)
read.csv2("dataset/guest_house.csv", header=T)
df <- read.csv2("dataset/guest_house.csv", header=T)
df <- read.csv2("dataset/guest_house.csv", header=T)
df
max(df)
max(df) - min(df)
(max(df) - min(df))/length(df)
scope = (max(df) - min(df))/length(df)
scope
table(df)
class(df$evlauation)
options(warn=-1)
df <- read.csv2("dataset/guest_house.csv", header=T)
df
scope = (max(df) - min(df)) / length(df)
scope
table(df)
class(df$evlauation)
hh$new <- ordered(hh$evlauation,
levels = c(1, 2, 3, 4, 5),
labels = c("poor", "below average", "average",
"above average", "excellent"))
class(df$evlauation)
df$label <- ordered(df$evlauation,
levels = c(1, 2, 3, 4, 5),
labels = c("poor", "below average", "average",
"above average", "excellent"))
table(df$label)
data.frame(table(df$label))
plot(df)
barplot(df)
barplot(table(df$label))
scope = (max(df) - min(df)) / length(df)
scope
table(df)
class(df$evlauation)
df$label <- ordered(df$evlauation,
levels = c(1, 2, 3, 4, 5),
labels = c("poor", "below average", "average",
"above average", "excellent"))
table(df$label)
data.frame(table(df$label))
data.frame(table(df$label))
names(df)
df$label
length(df$label)
unique(df$label)
length(unique(df$label))
scope = (max(df) - min(df)) / length(unique(df$label))
scope = (max(df) - min(df)) / length(unique(df$label)))
length(unique(df$label))
class(length(unique(df$label)))
max(df)
max(df)
df <- read.csv2("dataset/guest_house.csv", header=T)
df
scope = ( max(df) - min(df) ) / length(unique(df$label))
scope
scope = ( max(df$evlauation) - min(df$$evlauation) ) / length(unique(df$label))
scope
scope = ( max(df$evlauation) - min(df$evlauation) ) / length(unique(df$label))
scope
df$evlauation
max(df$evlauation)
min(df$evlauation)
length(unique(df$label))
scope = ( max(df$evlauation) - min(df$evlauation)) / length(unique(df$label))
scope
max(df$evlauation)
min(df$evlauation)
df$label <- ordered(df$evlauation,
levels = c(1, 2, 3, 4, 5),
labels = c("poor", "below average", "average",
"above average", "excellent"))
scope = ( max(df$evlauation) - min(df$evlauation)) / length(unique(df$label))
scope
costs = c(91, 78, 93, 57, 75, 52, 99, 80, 97, 62,
71, 69, 72, 89, 66, 75, 79, 75, 72, 76,
104, 74, 62, 68, 97, 105, 77, 65, 80, 109,
85, 97, 88, 68, 83, 68, 71, 69, 67, 74,
62, 82, 98, 101, 79, 105, 79, 69, 62, 73)
costs
data.frame(costs)
df <- data.frame(costs)
df$label <- ordered(df$costs,
levels=c(50~59,60~69,70~79,80~89,90~99,100~109))
df
as.factor(df$costs)
cut(df, quantile(df))
cut(df$costs, quantile(df$costs))
df$label <- cut(df$costs, breaks = c(0, 59, 69, 79, 89, 99, 109),
labels = c('50~59', '60~69', '70~79', '80~89', '90~99', '100~109'))
df$label
df$label
df <- read.csv2("dataset/guest_house.csv", header=T)
df
table(df)
class(df$evlauation)
df$label <- ordered(df$evlauation,
levels = c(1, 2, 3, 4, 5),
labels = c("poor", "below average", "average",
"above average", "excellent"))
scope = ( max(df$evlauation) - min(df$evlauation)) / length(unique(df$label))
scope
max(df)
df$label
df$label <- cut(df$costs, breaks = c(0, 59, 69, 79, 89, 99, 109),
labels = c('50~59', '60~69', '70~79', '80~89', '90~99', '100~109'))
costs <- c(91, 78, 93, 57, 75, 52, 99, 80, 97, 62,
71, 69, 72, 89, 66, 75, 79, 75, 72, 76,
104, 74, 62, 68, 97, 105, 77, 65, 80, 109,
85, 97, 88, 68, 83, 68, 71, 69, 67, 74,
62, 82, 98, 101, 79, 105, 79, 69, 62, 73)
df <- data.frame(costs)
df$label <- cut(df$costs, breaks = c(0, 59, 69, 79, 89, 99, 109),
labels = c('50~59', '60~69', '70~79', '80~89', '90~99', '100~109'))
df$label
ordered(df$label)
df <- read.csv2("dataset/guest_house.csv", header=T)
prop.table(table(df$label))
data.frame(prop.table(table(df$label)))
data.frame(100*(prop.table(table(df$label))))
df <- read.csv2("dataset/guest_house.csv", header=T)
df
table(df)
class(df$evlauation)
df$label <- ordered(df$evlauation,
levels = c(1, 2, 3, 4, 5),
labels = c("poor", "below average", "average",
"above average", "excellent"))
table(df$label)
data.frame(table(df$label))
prop.table(table(df$label))
prop.table(table(df$label))
data.frame(prop.table(table(df$label)))
data.frame(100*(prop.table(table(df$label))))
barchart(df$label)
barplot(df$label)
barplot(df$label)
prop.table(table(df$label))
data.frame(prop.table(table(df$label)))
data.frame(100*(prop.table(table(df$label))))
barplot(df$label)
prop.df <- data.frame(100*(prop.table(table(df$label))))
barplot(prop.df)
prop.df <- prop.table(table(df$label))
data.frame(prop.table(table(df$label)))
data.frame(100*(prop.table(table(df$label))))
barplot(prop.df)
df <- read.csv2("dataset/guest_house.csv", header=T)
table(df)
class(df$evlauation)
df$label <- ordered(df$evlauation,
levels = c(1, 2, 3, 4, 5),
labels = c("poor", "below average", "average",
"above average", "excellent"))
scope = ( max(df$evlauation) - min(df$evlauation)) / length(unique(df$label))
scope
df$label
table(df$label)
data.frame(table(df$label))
plot(df)
barplot(table(df$label))
piechart(table(df$label))
pie(table(df$label))
df <- read.csv2("dataset/guest_house.csv", header=T)
df
table(df)
class(df$evlauation)
df$label <- ordered(df$evlauation,
levels = c(1, 2, 3, 4, 5),
labels = c("poor", "below average", "average",
"above average", "excellent"))
#Cumulative frequency distribution tables
cumsum(prop.table(table(hh$new)))
#Cumulative frequency distribution tables
cumsum(prop.table(table(df$label)))
#Cumulative frequency distribution tables
cumsum.df <- cumsum(prop.table(table(df$label)))
barplot(cumsum.df)
costs <- c(91, 78, 93, 57, 75, 52, 99, 80, 97, 62,
71, 69, 72, 89, 66, 75, 79, 75, 72, 76,
104, 74, 62, 68, 97, 105, 77, 65, 80, 109,
85, 97, 88, 68, 83, 68, 71, 69, 67, 74,
62, 82, 98, 101, 79, 105, 79, 69, 62, 73)
df <- data.frame(costs)
mean(df$costs)
median(df$costs)
length(df$costs)
c(1,2,3,4,5)
v<-c(1,2,3,4,5)
median(v)
v<-c(1,2,3,4,5,6)
median(v)
median(df$costs)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(df$costs)
v <- c(2,1,2,3,1,2,3,4,1,5,5,3,2,3)
getmode(v)
getmode(df$costs)
getMode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
stem(df$costs)
getMode(df$costs)
range(df$costs)
range(df$costs)
min(df$costs)
max(df$costs) - min(df$costs)
# 변량
var(df$costs)
sd(df$costs)
quantile(df$costs)
# Calculating IQR
sort(df$costs)
summary(df$costs)
q <- quantile(df$costs)
q
q[4] - q[2]
iqr <- IQR(df$costs)
iqr
1.5*iqr
3*iqr
v1 <- c(14,7,3,9,13)
mean(v1)
median(v1)
var(v1)
sd(v1)
v1 <- c(14,7,3,9,13)
v2 <- c(12, 14, 18, 15, 12)
v3 <- c(1,0,11,2,12,8)
v4 <- c(-2,1,-3,0,3,2,-1)
Vs <- c(v1, v2, v3, v4)
for(v in Vs){
mean(v)
median(v)
var(v)
sd(v)
}
for(v in Vs){
print(mean(v))
print(median(v))
print(var(v))
print(sd(v))
}
for(v in Vs){
print(v)
print(mean(v))
print(median(v))
print(var(v))
print(sd(v))
}
Vs <- c(v1, v2, v3, v4)
Vs
mean(v2)
median(v2)
var(v2)
sd(v2)
mean(v1)
median(v1)
var(v1)
sd(v1)
mean(v2)
median(v2)
var(v2)
sd(v2)
mean(v3)
median(v3)
var(v3)
sd(v3)
mean(v4)
median(v4)
var(v4)
sd(v4)
ex.air <- c(9, 12, 18, 14, 12, 14, 12, 10, 16,
11, 9, 11, 13, 11, 13, 15, 13, 14)
mean(ex.air)
sd(ex.air)
median(ex.air)
table(ex.air)
summary(ex.air)
quantile(ex.air)
sort(ex.air)
quantile(ex.air)
quantile(ex.air)
iqr(ex.air)
iqr <- IQR(ex.air)
iqr
quantile(ex.air)
iqr/2
height <- c(167, 165, 162, 167, 160, 163, 168,
175, 157, 170, 172, 164, 171, 174)
weight <- c(66, 65, 64, 68, 61, 59, 67,
70, 60, 65, 67, 64, 62, 63)
data.frame(height, weight)
data.frame(height, weight, row.names = weight)
data.frame(height, weight)
df <- data.frame(height, weight)
scatter.smooth(df)
scatter(df)
plot(weight, height, main = "Scatter Plot")
cor(weight, height)
plot(weight, height, main = "Scatter Plot")
cor(weight, height)
scatter.smooth(df)
plot(weight, height, main = "Scatter Plot")
cor(weight, height)
x <- c(2.8, 2.5, 3.2, 1.8, 1.6, 3.6, 2.7, 3.0, 1.5, 3.3,
3.1, 2.9, 3.8, 3.2, 2.6, 3.5, 3.3, 2.7, 2.0, 1.8)
y <- c(52, 53, 62, 43, 50, 69, 55, 59, 33, 64,
62, 58, 75, 63, 53, 69, 66, 53, 45, 40)
cor(x, y)
sample <- c(14, 21, 29, 33, 40, 45, 49, 50, 52, 67)
sd(sample)
sd(sample)/mean(sample)
prop.dice <- c(1/6, 1/6)
dotplot(prop.dice)
prop.dice <- c(1/6, 1/6, 1/6, 1/6, 1/6, 1/6)
dotplot(prop.dice)
data.frame(prop.dice)
prop.dice <- c(1/6, 1/6)
data.frame(prop.dice)
dotplot(prop.dice)
df <- data.frame(prop.dice)
dotplot(df)
plot(df)
dotplot(df)
df <- data.frame(prop.dice, row.names = 'time')
dotplot(df)
prop.dice <- c(1/6, 1/6)
df <- data.frame(prop.dice, row.names = 'time')
dotplot(df)
df <- data.frame(prop.dice, row.names = time)
dotplot(df)
prop.dice <- c(1/6, 1/6)
df <- data.frame(prop.dice, row.names = time)
dotplot(df)
df <- data.frame(prop.dice)
dotplot(df)
# (1)
pnorm(mean = 20, sd=8)
# (1)
pnorm(18, mean = 20, sd=8)
# (2)
1 - pnorm(23, mean = 20, sd=8)
1 - pnorm(18, mean = 20, sd=8)
# (3)
pnorm(21, mean = 20, sd=8)
1 - pnorm(18, mean = 20, sd=8)
# (3)
1 - pnorm(21, mean = 20, sd=8)
# (3)
p_21 <- 1 - pnorm(21, mean = 20, sd=8)
p_18 <- 1 - pnorm(18, mean = 20, sd=8)
p_18 - p_21
x <- rnorm(16, 20, 8)
x
x.mean <- mean(x)
x.sd <- sd(x)
# (1) 0.4012937
pnorm(18, mean = x.mean , sd=x.sd)
# (2) 0.3538302
1 - pnorm(23, mean = x.mean , sd=x.sd)
# (2) 0.3538302
1 - pnorm(23, mean = x.mean , sd=x.sd)
# (3) 0.1484446
p_21 <- 1 - pnorm(21, mean = x.mean , sd=x.sd)
p_18 <- 1 - pnorm(18, mean = x.mean , sd=x.sd)
p_18 - p_21
# 3.
x<-rnorm(25, 168, 5)
x.sd <- sd(x)
x.sd
y <- rnorm(100,168, 5)
y.sd <- sd(y)
y.sd
x.sd <- 18/6
x.sd
pnorm(34, 36, 3)
p_34 <- pnorm(34, 36, 3)
p_43 <- pnorm(43, 36, 3)
p_43
1 - p_43
p_34 <- pnorm(34, 36, 3)
p_43 <- 1 - pnorm(43, 36, 3)
1- (p_34 + p_43)
p_34 <- pnorm(34, 36, 3)
p_43 <- 1 - pnorm(43, 36, 3)
1- (p_34 + p_43)
p_34
p_43 <- 1 - pnorm(43, 36, 3)
p_43
1- (p_34 + p_43)
p_34 <- pnorm(34, 40, 3)
p_34
p_43 <- 1 - pnorm(43, 40, 3)
p_43
1- (p_34 + p_43)
# 4. 0.8185
x.mean <- 40
x.sd <- 18/6
x.sd
p_34 <- pnorm(34, x.mean, x.sd)
p_34
p_43 <- 1 - pnorm(43, x.mean, x.sd)
p_43
1- (p_34 + p_43)
# 5.
x <- pnorm(940, 900, 40)
x
# (2)
y <- 1- pnorm(905, 900, 40)
y
y <- 1- pnorm(905, 900, 4)
y
qchisq(0.05, 4)
qchisq(0.1, 9)
dchisq(0.05, 4)
1 - dchisq(0.05, 4)
qchisq(0.0025, 4)
1 - qchisq(0.0025, 4)
qchisq(0.0025, 4)
qchisq(0.05, 4)
qchisq(0.025, 4)
qchisq(0.05, 4)
qchisq(0.995, 4)
qchisq(0.975, 4)
qchisq(0.207, 4)
qchisq(0.1, 4)
qchisq(7.7794, 4)
0.1
qchisq(0.1, 4)
dchisq(0.1, 4)
qchisq(dchisq(0.1, 4), 4)
qchisq(0.995, 4)
qchisq(0.005, 4)
qchisq(0.025, 4)
qchisq(0.995, 4)
qchisq(0.95, 4)
qchisq(0.95, 4)
qchisq(0.90, 9)
qchisq(0.975, 16)
qchisq(0.99, 8)
qchisq(0.025, 16)
qchisq(0.01, 8)
dchisq(7.4338, 20)
# (2)
dchisq(31.4104, 20)
# (3)
dchisq(9.5908, 20)
# (2) 0.01210365
1- dchisq(31.4104, 20)
# (3)
p_95 <- dchisq(9.5908, 20)
p_95
dchisq(28.4120, 20)
plot(dchisq(28.4120, 20))
dchisq(28.4120, 20)
p_95
dchisq(28.4120, 20)
p_28 <- dchisq(28.4120, 20)
p_28 - p_95
dchisq(x = 7.4338, 20)
# (2) 0.01210365
dchisq(31.4104, 20)
qchisq(0.01210365, 20)
qchisq(0.01210, 20)
# (2) 0.01210365
dchisq(31.4104, 20)
qchisq(0.01210, 20)
# (2) 0.01210365
dchisq(31.4104, 20) # 0.05
p_28 <- dchisq(28.4120, 20) # 0.9
p_28
# (3) 0.75
p_95 <- dchisq(9.5908, 20) # 0.025
p_95
