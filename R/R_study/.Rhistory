head(df2)
head(gener)
df2 <- cbind(df2, gener)
head(df2)
df2 <- df[, c(1,2,3,4,7)]
df2
df <- cbind(ch_by_quater, pop_by_quater, seoul_pop["세대"])
df2 <- df[, c(1,2,3,4,7)]
df <- cbind(ch_by_quater, pop_by_quater)
df2 <- df[, c(1,2,3,4,7)]
df2
df23 <- cbind(df2, seoul_pop["세대"])
df23
View(df23)
seoul_pop["세대"]
head(seoul_pop)
genre <- seoul_pop[,3]
gener <- seoul_pop[,3]
head(gener)
df23 <- cbind(df2, gener)
head(df23)
# chicken + population
df <- cbind(ch_by_quater, pop_by_quater)
df2 <- df[, c(1,2,3,4,7)]
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
#size = ~pop,
frame = ~분기별,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
library(tidyverse)
install.packages("colorspace")
library(tidyverse)
install.packages("lazyeval")
library(tidyverse)
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
#size = ~pop,
frame = ~분기별,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
library(plotly)
library(tidyverse)
library(plotly)
library(gapminder)
p <- df %>%
plot_ly(
x = ~x,
y = ~y,
frame = ~f,
type = 'scatter',
mode = 'markers',
showlegend = F
)
library(gapminder)
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
#size = ~pop,
frame = ~분기별,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
ggplotly(p, tooltip = "text")
# chicken + population
df <- cbind(ch_by_quater, pop_by_quater)
head(df)
df2 <- df[, c(5,3,4,7)]
head(df2)
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
#size = ~pop,
frame = ~기간,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
ggplotly(p, tooltip = "text")
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
#size = ~pop,
color = ~시군구,
frame = ~기간,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
ggplotly(p, tooltip = "text")
###########서울 인구 통계################
seoul_pop <- read_excel("dataset/seoul_pop.xlsx", skip=1)
head(seoul_pop)
# 문자열에 있는 ',' 제거 & as.numeric
seoul_pop$세대 <- gsub('[,]', '', seoul_pop$세대)
gener <- seoul_pop["세대"]
head(gener)
t <- cbind(df2, gener)
t
str(t)
df2 <- cbind(df2, gener)
df2&세대 <- as.numeric(df2$세대)
###########서울 인구 통계################
seoul_pop <- read_excel("dataset/seoul_pop.xlsx", skip=1)
head(seoul_pop)
# 문자열에 있는 ',' 제거 & as.numeric
seoul_pop$세대 <- gsub('[,]', '', seoul_pop$세대)
gener <- seoul_pop["세대"]
head(gener)
pop_by_quater <- seoul_pop %>%
group_by(기간, 자치구) %>%
summarise(세대당인구 = mean(세대당인구))
# chicken + population
df <- cbind(ch_by_quater, pop_by_quater)
df2 <- df[, c(5,3,4,7)]
df2 <- cbind(df2, gener)
df2&세대 <- as.numeric(df2$세대)
df2&세대 <- as.numeric(df2$세대)
df2&세대 <- as.numeric(df2$세대)
# chicken + population
df <- cbind(ch_by_quater, pop_by_quater)
df2 <- df[, c(5,3,4,7)]
df2
df2 <- cbind(df2, gener)
df2
nrow(df2)
df2&세대 <- as.numeric(df2$세대)
as.numeric(as.character(df2$세대))
df2&세대 <- as.numeric(as.character(df2$세대))
df2["세대"] <- as.numeric(as.character(df2$세대))
df2
str(df2)
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
size = ~세대,
color = ~시군구,
frame = ~기간,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
ggplotly(p, tooltip = "text")
###########서울 인구 통계################
seoul_pop <- read_excel("dataset/seoul_pop.xlsx", skip=1)
head(seoul_pop)
df2 <- cbind(df2, seoul_pop["세대"])
seoul_pop[c("세대", "계")]
df2 <- cbind(df2, seoul_pop[c("세대", "계")])
df2["세대"] <- as.numeric(as.character(df2$세대))
df2["계"] <- as.numeric(as.character(df2$계))
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
size = ~계,
color = ~시군구,
frame = ~기간,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
ggplotly(p, tooltip = "text")
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
size = ~세대,
color = ~시군구,
frame = ~기간,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
ggplotly(p, tooltip = "text")
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
size = ~세대,
color = ~시군구,
frame = ~기간,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) #%>%
ggplotly(p, tooltip = "text")
# 연령별, 시군구, 통화건수
ch_by_age <- ch %>%
group_by(연, 분기별, 연령대, 시군구) %>%
summarise(통화건수 = mean(통화건수))
nrow(ch_by_quater)
head(ch_by_quater)
tail(ch_by_quater)
# 연령별, 시군구, 통화건수
ch_by_age <- ch %>%
group_by(연, 분기별, 연령대, 시군구) %>%
summarise(통화건수 = mean(통화건수))
# 연령별, 시군구, 통화건수
ch_by_age <- chs %>%
group_by(연, 분기별, 연령대, 시군구) %>%
summarise(통화건수 = mean(통화건수))
nrow(ch_by_age)
# 연령별, 시군구, 통화건수
ch_by_age <- chs %>%
group_by(연령대, 시군구) %>%
summarise(통화건수 = mean(통화건수))
nrow(ch_by_age)
head(ch_by_age)
tail(ch_by_age)
# 성별, 시군구 통화건수
ch_by_sex <- ch %>%
group_by(성별, 시군구) %>%
summarise(통화건수 = mean(통화건수))
# 성별, 시군구 통화건수
ch_by_sex <- chs %>%
group_by(성별, 시군구) %>%
summarise(통화건수 = mean(통화건수))
# 연령별, 시군구, 통화건수
ch_by_age <- chs %>%
group_by(연령대, 시군구) %>%
summarise(통화건수 = mean(통화건수))
head(ch_by_age)
tail(ch_by_age)
head(chs)
tail(chs)
# 분기별, 시군구, 통화건수
ch_by_quater <- chs %>%
group_by(연, 분기별, 시군구) %>%
summarise(통화건수 = mean(통화건수))
head(ch_by_quater)
tail(ch_by_quater)
# 연령별, 시군구, 통화건수
ch_by_age <- chs %>%
group_by(연령대, 시군구) %>%
summarise(통화건수 = mean(통화건수))
head(ch_by_age)
# Plot
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
size = ~세대,
color = ~시군구,
frame = ~기간,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
ggplotly(p, tooltip = "text")
library(dplyr)
library(COUNT)
library(readxl)
library(plotly)
library(tidyverse)
library(gapminder)
source("clean_chicken_data.R", encoding = 'utf-8')
############# Chicken Data ##############
years <- c(2013, 2014, 2015, 2016, 2017)
# Rbind all chicken files
chs <- data.frame()
for(y in years) {
tmp <- clean_chicken_data(y)
chs <- rbind(chs, tmp)
}
head(chs)
tail(chs)
head(chs["연"==2016])
head(chs["연"==2017])
unique(chs$연)
# 연도별, 분기별, 시군구, 통화건수
ch_by_quater <- chs %>%
group_by(연, 분기별, 시군구) %>%
summarise(통화건수 = mean(통화건수))
head(ch_by_quater)
tail(ch_by_quater)
############# Seoul Population Data ##############
seoul_pop <- read_excel("dataset/seoul_pop.xlsx", skip=1)
# Remove ',' in columns & Type casting
seoul_pop$세대 <- gsub('[,]', '', seoul_pop$세대)
seoul_pop$계 <- gsub('[,]', '', seoul_pop$계)
# mean of 세대당 인구 by 기간별, 구별
pop_by_quater <- seoul_pop %>%
group_by(기간, 자치구) %>%
summarise(세대당인구 = mean(세대당인구))
# Cbind Chicken, Seoul Population
df <- cbind(ch_by_quater, pop_by_quater)
# Indexing
df2 <- df[, c(5,3,4,7)]
# 세대, 계
df2 <- cbind(df2, seoul_pop[c("세대", "계")])
df2["세대"] <- as.numeric(as.character(df2$세대))
df2["계"] <- as.numeric(as.character(df2$계))
df2["기간"]
View(df2)
ch_16 <- clean_chicken_data(2016)
str(ch_16)
unique(ch_16$월)
View(df)
# 연도별, 분기별, 시군구, 통화건수
ch_by_quater <- chs %>%
group_by(연, 분기별, 시군구) %>%
summarise(통화건수 = mean(통화건수))
head(ch_by_quater)
tail(ch_by_quater)
View(ch_by_quater)
source("clean_chicken_data.R", encoding = 'utf-8')
############# Chicken Data ##############
years <- c(2013, 2014, 2015, 2016, 2017)
# Rbind all chicken files
chs <- data.frame()
for(y in years) {
tmp <- clean_chicken_data(y)
chs <- rbind(chs, tmp)
}
head(chs)
tail(chs)
# 연도별, 분기별, 시군구, 통화건수
ch_by_quater <- chs %>%
group_by(연, 분기별, 시군구) %>%
summarise(통화건수 = mean(통화건수))
View(ch_by_quater)
head(ch_by_quater)
tail(ch_by_quater)
############# Seoul Population Data ##############
seoul_pop <- read_excel("dataset/seoul_pop.xlsx", skip=1)
# Remove ',' in columns & Type casting
seoul_pop$세대 <- gsub('[,]', '', seoul_pop$세대)
seoul_pop$계 <- gsub('[,]', '', seoul_pop$계)
# mean of 세대당 인구 by 기간별, 구별
pop_by_quater <- seoul_pop %>%
group_by(기간, 자치구) %>%
summarise(세대당인구 = mean(세대당인구))
# Cbind Chicken, Seoul Population
df <- cbind(ch_by_quater, pop_by_quater)
# Indexing
df2 <- df[, c(5,3,4,7)]
# 세대, 계
df2 <- cbind(df2, seoul_pop[c("세대", "계")])
df2["세대"] <- as.numeric(as.character(df2$세대))
df2["계"] <- as.numeric(as.character(df2$계))
# Plot
p <- df2 %>%
plot_ly(
x = ~세대당인구,
y = ~통화건수,
size = ~세대,
color = ~시군구,
frame = ~기간,
text = ~시군구,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
ggplotly(p, tooltip = "text")
a <- rep("A", 20);a
b <- rep("B", 30)
c <- rep("C", 10)
x <- c(a, b, c)
x
y <- as.matrix(table(x))
y
freq <- y[,1]
freq
relative_freq <- freq/sum(y)
relative_freq
z <- cbind(freq, relative_freq)
z
# 파이 촤트
x <- c(1520, 770, 510)
# digits : 소수점 1자리까지 나타낼
y <- round(x/sum(x)*100, digits = 1)
y
lab <- c("A", "B", "C")
lab <- c("A", "B", "C")
w <- paste(lab, "(", y, "%",")")
pie(x, labels=w, main="파이촤트")
length(x)
data()
hist(faithful$waiting)
# 줄기-잎 그림(stem-and-leaf)
stem(faithful$waiting)
x <- stackloss$stack.loss
x
mean(x)
var(x)
sd(x) #표준편
sd(x) #표준편차
quantile(x, c(0.1, 0.25, 0.5, 0.95))
fivenum(x)
summary(x)
boxplot(x, range=0)
boxplot(x, range=0)
boxplot(x, range=1.5) #default 사분위구간은 1.5이다.
boxplot(x, range=0)
boxplot(x, range=1.5) #default 사분위구간은 1.5이다.
# 표본 상관계수
x <- faithful$eruptions
Y <- faithful$waiting
plot(x, y)
plot(x, y)
plot(x, y)
# 표본 상관계수
x <- faithful$eruptions
Y <- faithful$waiting
plot(x, y)
length(x)
length(y)
plot(y,x)
Y <- faithful$waiting
plot(y,x)
plot(x, y)
# 표본 상관계수
x <- faithful$eruptions
Y <- faithful$waiting
plot(x, y)
y <- faithful$waiting
plot(x, y)
cor(x, y)
seq(1,10)
int <- seq(1,10)
IQR(int)
int <- c(1,2,3,4,5,6,7,8,9,10)
IQR(int)
boxplot(x)
x <- c(1, 0, -1, 0)
y <- c(0,1, 0, -1)
cor(x,y)
data <- read.csv("dataset/all_sample.csv", stringsAsFactors = F, header = T)
View(data)
install.packages("KoNLP")
library(KoNLP)
useSejongDic()
library(dplyr)
library(ggplot2)
library(plotly)
sen <- subset(data, subset = (data[6]==1 | data[6]==2)) # 1: 루머 , 2: 제외 (0: 뉴스 기사를 제외한 사람들의 여론)
sen <- sen[4]
sb <- sapply(sen[1], extractNoun, USE.NAMES = F)
